[metadata]
name = {{ cookiecutter.package_name }}
version = {{ cookiecutter.package_version }}
description = {{ cookiecutter.package_description }}
long_description = file: README.md, CHANGELOG.md, LICENSE.md
long_description_content_type = text/markdown
keywords = kanban, trello, deals, cfa, cloud

author = {{ cookiecutter.author_name }}
author_email = {{ cookiecutter.author_email }}
maintainer = {{ cookiecutter.author_name }}
maintainer_email = {{ cookiecutter.author_email }}

url = {{ cookiecutter.github_url }}
project_urls =
    Bug Tracker = {{ cookiecutter.github_url }}
    Documentation = {{ cookiecutter.github_url }}
    Source Code = {{ cookiecutter.github_url }}
    Specifications = {{ cookiecutter.github_url }}
download_url = {{ cookiecutter.github_url }}

license = {{ cookiecutter.license }}
license_files =
    LICENSE.md

platform = any
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: {{ cookiecutter.python_version }}
    Topic :: Software Development :: Libraries :: Python Modules


[options]
zip_safe = False
include_package_data = True

packages = find:
scripts =
    bin/{{ cookiecutter.package_name }}_cmd
test_suite = tests

python_requires = >= {{ cookiecutter.python_version }}
setup_requires =
    setuptools >= 38.3.0
    pytest-runner
tests_require =
    pytest

[options.package_data]
* = *.csv, *.xls, *.xlsx

[options.extras_require]
dev =
    docutils
    Pygments
test =
    green
    coverage
ci =
    codecov
    codacy-coverage


[aliases]
test=pytest


#[tool:pytest]
#addopts = --pylint


[bdist_wheel]
universal = False


[bdist_rpm]
packager = {{ cookiecutter.author_name }} <{{ cookiecutter.author_email }}>
provides = {{ cookiecutter.package_name }}


[check]
metadata = True
restructuredtext = False
strict = True


[sdist]
formats = zip, gztar


[coverage:report]
show_missing = True


[green]
file-pattern = test_*.py
verbose = 2
no-skip-report = True
quiet-stdout = True
run-coverage = True


[pycodestyle]
max-line-length = 80


[flake8]
max-line-length = 80
doctests = True
exclude =  .git, .eggs, __pycache__, tests/, docs/, build/, dist/


[pydocstyle]
match-dir = (?!tests)(?!resources)(?!docs)[^\.].*
match = (?!test)(?!setup)[^\._].*\.py
inherit = False
ignore = D200, D203, D213, D406, D407   # Google conventions


[build_sphinx]
all_files = 1
build-dir = docs/build
source-dir = docs/source
